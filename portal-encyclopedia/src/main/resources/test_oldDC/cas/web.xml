<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>encyclopedia</display-name>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		    classpath*:spring/applicationContext-*.xml,
		    classpath*:remote-config.xml,
		    classpath*:remote-consumer.xml
		</param-value>
	</context-param>
	<!-- 解决工程编码过滤器 -->
    <filter>  
      <filter-name>CharacterEncodingFilter</filter-name>  
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
      <init-param>  
          <param-name>encoding</param-name>  
          <param-value>utf-8</param-value>  
      </init-param>  
   </filter>
   <!-- SEO URL静态化 start -->
	<filter>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<!-- SEO URL静态化 end -->
	<!-- ======================== 单点登录开始 ========================  -->
	<!-- 用于单点退出，该过滤器用于实现单点登出功能，可选配置  -->
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	<!-- 该过滤器用于实现单点登出功能，可选配置。  -->
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 该过滤器负责用户的认证工作，必须启用它  -->
	<filter>
		<filter-name>CASFilter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>http://wk-login.99114.cn/login/login</param-value>
			<!--这里的server是服务端的IP  -->
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://wk-ecncyclopedia.99114.cn</param-value>
		</init-param>
		<!-- 平台类型 1 member 2admin -->
		<init-param>
			<param-name>source</param-name>
			<param-value>1</param-value>
		</init-param>
		<init-param>
			<param-name>deploy_environment</param-name>
			<param-value>test</param-value>
		</init-param>
		<init-param>
			<param-name>ignoreSuffixRegex</param-name>
			<param-value>/static/</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASFilter</filter-name>
		<url-pattern>/login/*</url-pattern>
	</filter-mapping>
	<!-- 该过滤器负责对Ticket的校验工作，必须启用它  -->
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>http://wk-login.99114.cn</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://wk-ecncyclopedia.99114.cn</param-value>
		</init-param>
		<!-- 不使用session -->
		<init-param>
			<param-name>useSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 票据验证后不重定向 -->
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 该过滤器负责实现HttpServletRequest请求的包裹， 比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。  -->
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。 比如AssertionHolder.getAssertion().getPrincipal().getName()。  -->
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
		<init-param>
			<param-name>deploy_environment</param-name>
			<param-value>test</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- ======================== 单点登录结束 ========================  -->
	
	<!-- Spring 刷新Introspector防止内存泄露 -->
    <listener>
        <listener-class>
            org.springframework.web.util.IntrospectorCleanupListener
        </listener-class>
    </listener>
    
    <servlet>
	 <description>spring mvc servlet</description>
	 <servlet-name>springMvc</servlet-name>
	 <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	 <init-param>
		<description>spring mvc 配置文件</description>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/spring-mvc.xml,classpath*:spring/spring-mvc-encyclopedia.xml</param-value>
	 </init-param>
	 <load-on-startup>1</load-on-startup>
   </servlet>
   <servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>/</url-pattern>
   </servlet-mapping>
    <!--广告-->
	<filter>
		<filter-name>systemContext</filter-name>
		<filter-class>com.wangku.wjf.common.utils.context.SystemContextFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>systemContext</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--广告结束-->
	<!-- 广告标签配置 -->
    <jsp-config>
		<taglib>
			<taglib-uri>http://admin.99114.cn/adverties/functions</taglib-uri>
			<taglib-location>/WEB-INF/tags/adverties.tld</taglib-location>
		</taglib>
	</jsp-config>
	<!-- 404跳转路径 -->
	<error-page>
		<error-code>404</error-code>
		<location>/error/defaultErrorOld.jsp</location>
	</error-page>
</web-app>